from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def main_menu(role, channel=None, helper=None) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [
            InlineKeyboardButton('üè™ –ú–∞–≥–∞–∑–∏–Ω', callback_data='shop'),
            InlineKeyboardButton('üìú –ü—Ä–∞–≤–∏–ª–∞', callback_data='rules'),
        ],
        [InlineKeyboardButton('üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile')],
    ]
    if helper and channel:
        inline_keyboard.append([
            InlineKeyboardButton('üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url=f"https://t.me/{helper.lstrip('@')}"),
            InlineKeyboardButton('‚Ñπ –ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª', url=f"https://t.me/{channel}")
        ])
    else:
        if helper:
            inline_keyboard.append([InlineKeyboardButton('üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url=f"https://t.me/{helper.lstrip('@')}")])
        if channel:
            inline_keyboard.append(
                [InlineKeyboardButton('‚Ñπ –ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª', url=f"https://t.me/{channel}")])
    if role > 1:
        inline_keyboard.append([InlineKeyboardButton('üéõ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', callback_data='console')])

    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def categories_list(list_items, current_index, max_index) -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    page_items = list_items[current_index * 10: (current_index + 1) * 10]
    for name in page_items:
        markup.add(InlineKeyboardButton(text=name, callback_data=f'category_{name}'))
    if max_index > 0:
        buttons = [
            InlineKeyboardButton(text='‚óÄÔ∏è', callback_data=f'categories-page_{current_index - 1}'),
            InlineKeyboardButton(text=f'{current_index + 1}/{max_index + 1}', callback_data='dummy_button'),
            InlineKeyboardButton(text='‚ñ∂Ô∏è', callback_data=f'categories-page_{current_index + 1}')
        ]
        markup.row(*buttons)
    markup.add(InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_to_menu'))
    return markup


def goods_list(list_items, category_name, current_index, max_index) -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    page_items = list_items[current_index * 10: (current_index + 1) * 10]
    for name in page_items:
        markup.add(InlineKeyboardButton(text=name, callback_data=f'item_{name}'))
    if max_index > 0:
        buttons = [
            InlineKeyboardButton(text='‚óÄÔ∏è', callback_data=f'goods-page_{category_name}_{current_index - 1}'),
            InlineKeyboardButton(text=f'{current_index + 1}/{max_index + 1}', callback_data='dummy_button'),
            InlineKeyboardButton(text='‚ñ∂Ô∏è', callback_data=f'goods-page_{category_name}_{current_index + 1}')
        ]
        markup.row(*buttons)
    markup.add(InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='shop'))
    return markup


def user_items_list(list_items, data, back_data, pre_back, current_index, max_index) -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    page_items = list_items[current_index * 10: (current_index + 1) * 10]
    for item in page_items:
        markup.add(InlineKeyboardButton(text=item.item_name, callback_data=f'bought-item:{item.id}:{pre_back}'))
    if max_index > 0:
        buttons = [
            InlineKeyboardButton(text='‚óÄÔ∏è', callback_data=f'bought-goods-page_{current_index - 1}_{data}'),
            InlineKeyboardButton(text=f'{current_index + 1}/{max_index + 1}', callback_data='dummy_button'),
            InlineKeyboardButton(text='‚ñ∂Ô∏è', callback_data=f'bought-goods-page_{current_index + 1}_{data}')
        ]
        markup.row(*buttons)
    markup.add(InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data=back_data))
    return markup


def item_info(item_name, category_name) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('üí∞ –ö—É–ø–∏—Ç—å', callback_data=f'buy_{item_name}')],
        [InlineKeyboardButton('üí∞ –ö—É–ø–∏—Ç—å —Å –ø–æ–º–æ—â—å—é cryptomus', callback_data=f'buy_cryptomus_{item_name}')],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data=f'category_{category_name}')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def profile(user_items=0) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='replenish_balance')
         ],
        [InlineKeyboardButton('üé≤ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', callback_data='referral_system')
         ]
    ]
    if user_items != 0:
        inline_keyboard.append([InlineKeyboardButton('üéÅ –ö—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã', callback_data='bought_items')])
    inline_keyboard.append([InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_to_menu')])
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def rules() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_to_menu')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def console() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏', callback_data='settings')
         ],
        [InlineKeyboardButton('üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–º', callback_data='shop_management')
         ],
        [InlineKeyboardButton('üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', callback_data='user_management')
         ],
        [InlineKeyboardButton('üì¢ –†–∞—Å—Å—ã–ª–∫–∞', callback_data='send_message')
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_to_menu')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def user_management(admin_role, user_role, admin_manage, items, user_id) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [
            InlineKeyboardButton('üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', callback_data=f'fill-user-balance_{user_id}')
        ]
    ]
    if items > 0:
        inline_keyboard.append([InlineKeyboardButton('üéÅ –ö—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã', callback_data=f'user-items_{user_id}')])
    if admin_role >= admin_manage and admin_role > user_role:
        if user_role == 1:
            inline_keyboard.append(
                [InlineKeyboardButton('‚¨ÜÔ∏è –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º', callback_data=f'set-admin_{user_id}')])
        else:
            inline_keyboard.append(
                [InlineKeyboardButton('‚¨áÔ∏è –°–Ω—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', callback_data=f'remove-admin_{user_id}')])
    inline_keyboard.append([InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='user_management')])
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def user_manage_check(user_id) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('‚úÖ –î–∞', callback_data=f'check-user_{user_id}')
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='user_management')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def shop_management() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏—è–º–∏ (—Ç–æ–≤–∞—Ä–∞–º–∏)', callback_data='goods_management')
         ],
        [InlineKeyboardButton('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏', callback_data='categories_management')
         ],
        [InlineKeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='statistics')
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='console')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def goods_management() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é (—Ç–æ–≤–∞—Ä)', callback_data='item-management'),
         InlineKeyboardButton('–∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é', callback_data='update_item'),
         InlineKeyboardButton('—É–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é', callback_data='delete_item')
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='shop_management')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def item_management() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('—Å–æ–∑–¥–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é', callback_data='add_item'),
         InlineKeyboardButton('–¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π', callback_data='update_item_amount'),
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='goods_management')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def categories_management() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('–¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='add_category'),
         InlineKeyboardButton('–∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='update_category'),
         InlineKeyboardButton('—É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='delete_category')
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='shop_management')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def close() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='close')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def check_sub() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='https://t.me/Serge_as_the_meaning_of_life')
         ],
        [InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='sub_channel_done')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def back(callback) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data=callback)
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def setting() -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('üÜò –ò–∑–º–µ–Ω–∏—Ç—å —Å–∞–ø–ø–æ—Ä—Ç–∞', callback_data='helper_data'),
         InlineKeyboardButton('üìú –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞', callback_data='rules_data')
         ],
        [InlineKeyboardButton('‚ÑπÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª', callback_data='channel_data'),
         InlineKeyboardButton('‚ÑπÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É', callback_data='group_data')],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='console')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def payment_menu(url, label) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å', url=url)
         ],
        [InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data=f'check_{label}')
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='replenish_balance')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def reset_config(key) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton(f'–°–±—Ä–æ—Å–∏—Ç—å {key}', callback_data=f'reset_{key}')
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='settings')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def question_buttons(question, back_data) -> InlineKeyboardMarkup:
    inline_keyboard = [
        [InlineKeyboardButton('‚úÖ –î–∞', callback_data=f'{question}_yes'),
         InlineKeyboardButton('‚ùå –ù–µ—Ç', callback_data=f'{question}_no')
         ],
        [InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data=back_data)
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

def check_payment_kb(data):
    inline_keyboard = [
        [InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data=f'check_payment_cryptomus:{data}')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

